import requests
import pandas as pd

API_URL = "https://roszdravnadzor.gov.ru/ajax/services/misearch"
SEARCH_URL = "https://roszdravnadzor.gov.ru/services/misearch"

HEADERS = {
    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36",
    "Referer": "https://roszdravnadzor.gov.ru/services/misearch",
    "X-Requested-With": "XMLHttpRequest",
    "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",
    "Origin": "https://roszdravnadzor.gov.ru",
}


def get_medical_data(query):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–º—É –∏–∑–¥–µ–ª–∏—é, —ç–º—É–ª–∏—Ä—É—è –±—Ä–∞—É–∑–µ—Ä."""

    session = requests.Session()
    session.get(SEARCH_URL, headers=HEADERS)  # –ü–æ–ª—É—á–∞–µ–º cookies

    data = {
        "q_mi_label_application": query,
        "draw": "1",
        "start": "0",
        "length": "10",
    }

    response = session.post(API_URL, data=data, headers=HEADERS)

    if response.status_code != 200:
        print(f"‚ö† –û—à–∏–±–∫–∞ {response.status_code} –¥–ª—è {query}")
        return None

    try:
        json_data = response.json()
    except requests.exceptions.JSONDecodeError:
        print(f"‚ö† –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –¥–ª—è {query}")
        return None

    if not json_data.get("data"):
        print(f"‚ö† –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É {query}")
        return None

    records = json_data["data"]
    parsed_data = []

    for record in records:
        parsed_data.append({
            "–ó–∞–ø—Ä–æ—Å": query,
            "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä": record.get("col1", {}).get("label", ""),
            "–†–µ–≥. –Ω–æ–º–µ—Ä": record.get("col2", {}).get("label", ""),
            "–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏": record.get("col3", {}).get("label", ""),
            "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è": record.get("col4", {}).get("label", ""),
            "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ": record.get("col5", {}).get("title", ""),
            "–ó–∞—è–≤–∏—Ç–µ–ª—å": record.get("col6", {}).get("label", ""),
            "–î–µ—Ä–∂–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è": record.get("col7", {}).get("title", ""),
            "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å –¥–µ—Ä–∂–∞—Ç–µ–ª—è": record.get("col8", {}).get("title", ""),
            "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å": record.get("col9", {}).get("label", ""),
            "–ê–¥—Ä–µ—Å –º–µ—Å—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞": record.get("col10", {}).get("title", ""),
            "–ê–¥—Ä–µ—Å –º–µ—Å—Ç–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞)": record.get("col11", {}).get("title", ""),
            "–ö–æ–¥ –≤–∏–¥–∞ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–¥–µ–ª–∏–π": record.get("col12", {}).get("label", ""),
            "–ö–ª–∞—Å—Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–∏—Å–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è": record.get("col13", {}).get("label", ""),
            "–í–∏–¥ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∏–∑–¥–µ–ª–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–µ–π": record.get("col14", {}).get(
                "label", ""),
            "–ù–æ–º–µ—Ä —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è –º–µ–¥–∏–∑–¥–µ–ª–∏—è (–†–£)": record.get("col15", {}).get("label", ""),
            "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏-–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è": record.get("col16", {}).get("title", ""),
            "–ê–¥—Ä–µ—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏-–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è": record.get("col17", {}).get("label", ""),
            "PDF": record.get("col18", {}).get("label", ""),
        })

    return parsed_data


def process_csv(input_file, output_file):
    """–ß–∏—Ç–∞–µ—Ç CSV-—Ñ–∞–π–ª —Å –Ω–æ–º–µ—Ä–∞–º–∏ –†–£ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã."""

    df = pd.read_csv(input_file)
    queries = df["–†–µ–≥_–Ω–æ–º–µ—Ä"].astype(str).tolist()  # –ë–µ—Ä—ë–º –∫–æ–ª–æ–Ω–∫—É —Å –Ω–æ–º–µ—Ä–∞–º–∏

    all_results = []

    for query in queries:
        print(f"üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {query}")
        data = get_medical_data(query)
        if data:
            all_results.extend(data)

    if all_results:
        result_df = pd.DataFrame(all_results)
        result_df.to_csv(output_file, index=False, encoding="utf-8")
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_file}")
    else:
        print("‚ö† –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!")


# üìå –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
INPUT_CSV = "queries.csv"  # –§–∞–π–ª —Å –Ω–æ–º–µ—Ä–∞–º–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
OUTPUT_CSV = "medical_data.csv"  # –ö—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç

# üèÅ –ó–∞–ø—É—Å–∫
process_csv(INPUT_CSV, OUTPUT_CSV)
